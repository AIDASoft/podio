###############################################################################
# PODIO CMAKE CONFIG
#
# Exported Targets
#
#  podio::podio         Base library for podio
#  podio::podioDict     Root Dictionary for base podio classes
#  podio::podioRootIO
#         RootWriter and RootReader classes, needed for python,
#         contains podio::podio and podio::podioDict and the
#         required ROOT:: libraries
#
# Macros: see podioMacros.cmake for complete documentation
#
#  PODIO_GENERATE_DATAMODEL
#  PODIO_GENERATE_ROOTDICT
#
###############################################################################
@PACKAGE_INIT@

set_and_check(podio_INCLUDE_DIR "@PACKAGE_CMAKE_INSTALL_INCLUDEDIR@")
set_and_check(podio_LIBRARY_DIR "@PACKAGE_CMAKE_INSTALL_LIBDIR@")
set_and_check(podio_PYTHON_DIR "@PACKAGE_podio_PYTHON_INSTALLDIR@")
set(PODIO_IO_HANDLERS "@PODIO_IO_HANDLERS@")

include(CMakeFindDependencyMacro)
find_dependency(ROOT @ROOT_VERSION@)

if(@ENABLE_SIO@)
  find_dependency(SIO)
endif()

if(NOT TARGET podio::podio)
  include("${CMAKE_CURRENT_LIST_DIR}/podioTargets.cmake")
  include("${CMAKE_CURRENT_LIST_DIR}/podioMacros.cmake")

  # ROOT only sets usage requirements from 6.14, so for
  # earlier versions need to hack in INTERFACE_INCLUDE_DIRECTORIES
  if(ROOT_VERSION VERSION_LESS 6.14)
    set_property(TARGET podio::podio APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES "${ROOT_INCLUDE_DIRS}")
  endif()
endif()

check_required_components(podio)

# Print the default "Found" message and check library location
include(FindPackageHandleStandardArgs)
get_property(TEST_PODIO_LIBRARY TARGET podio::podio PROPERTY LOCATION)
find_package_handle_standard_args(podio DEFAULT_MSG CMAKE_CURRENT_LIST_FILE TEST_PODIO_LIBRARY)

