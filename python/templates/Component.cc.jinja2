{% import "macros/utils.jinja2" as utils %}
// AUTOMATICALLY GENERATED FILE - DO NOT EDIT

#include "{{ incfolder }}{{ class.bare_type }}.h"

#if defined(PODIO_JSON_OUTPUT) && !defined(__CLING__)
#include "nlohmann/json.hpp"
#endif

#include "podio/UserDataCollection.h"

{{ utils.namespace_open(class.namespace) }}

std::ostream& operator<<(std::ostream& o, const {{class.full_type}}& value) {
{% for member in Members %}
{% if member.is_array %}
  for (int i = 0; i < {{ member.array_size }}; ++i) {
    o << value.{{ member.name }}[i] << "|";
  }
  o << " ";
{% else %}
  o << value.{{ member.name }} << " ";
{% endif %}
{% endfor %}

  return o;
}

#if defined(PODIO_JSON_OUTPUT) && !defined(__CLING__)
void to_json(nlohmann::json& j, const {{ class.bare_type }}& value) {
  j = nlohmann::json{
{% set comma = joiner(",") %}
{% for member in Members %}
  {{ comma() }}{"{{ member.name }}", value.{{ member.name }}}
{% endfor %}
  };
}
#endif

namespace {
  bool register_{{ class.bare_type }}() {
    const static auto reg = []() {
      podio::detail::registerUserDataCollection({{ class.full_type }}{});
      return true;
    }();
    return reg;
  }

  const auto registererd_{{ class.bare_type }} = register_{{ class.bare_type }}();
}

{{ utils.namespace_close(class.namespace) }}

