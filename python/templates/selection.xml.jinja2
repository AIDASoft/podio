{% macro class_selection(class, prefix='', postfix='') %}
{%- if class.namespace %}
        <class name="{{ class.namespace }}::{{ prefix }}{{ class.bare_type }}{{ postfix }}"/>
{%- else %}
        <class name="{{ prefix }}{{ class.bare_type }}{{ postfix }}"/>
{%- endif %}
{% endmacro %}

<lcgdict>
    <selection>

        <!-- components -->
{% for class in components %}
{{ class_selection(class) }}
{% endfor %}

        <!-- datatypes -->
{% for class in datatypes %}
{{ class_selection(class, postfix='Data') }}
{# We need to also create the collections in the selection xml file. #}
{# Otherwise the python interface does not work in gcc builds #}
{# Additionally, in order to allow "direct" access to the user facing classes #}
{# we have to declare them here, otherwise they cannot be easily imported #}
{{ class_selection(class) }}
{{ class_selection(class, postfix='Collection') }}

{% endfor %}
    </selection>
</lcgdict>
