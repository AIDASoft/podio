{% import "macros/declarations.jinja2" as macros %}
{% import "macros/utils.jinja2" as utils %}
// AUTOMATICALLY GENERATED FILE - DO NOT EDIT

#ifndef {{ package_name.upper() }}_{{ class.bare_type }}_H
#define {{ package_name.upper() }}_{{ class.bare_type }}_H

{% for include in includes %}
{{ include }}
{% endfor %}

#include "podio/utilities/UserDataHelpers.h"

#include <ostream>

#if defined(PODIO_JSON_OUTPUT) && !defined(__CLING__)
#include "nlohmann/json_fwd.hpp"
#endif

{{ utils.namespace_open(class.namespace) }}
{{ macros.class_description(class.bare_type, Description, Author) }}
class {{ class.bare_type }} {
public:
  constexpr static bool is_component = true;
  constexpr static const char typeName[{{ class.full_type | length }} + 1] = "{{ class.full_type }}";

{% for member in Members %}
  {{ member }}
{% endfor %}

{{ utils.if_present(ExtraCode, "declaration") }}
};

std::ostream& operator<<(std::ostream& o, const {{class.full_type}}& value);

#if defined(PODIO_JSON_OUTPUT) && !defined(__CLING__)
void to_json(nlohmann::json& j, const {{ class.bare_type }}& value);
#endif

{{ utils.namespace_close(class.namespace) }}

template<> constexpr const char* podio::detail::userDataTypeName<{{ class.full_type }}>() {
  return "{{ class.full_type }}";
}
template<> constexpr const char* podio::detail::userDataCollTypeName<{{ class.full_type }}>() {
  return "podio::UserDataCollection<{{ class.full_type }}>";
}

#endif
