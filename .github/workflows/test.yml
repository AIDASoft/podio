name: linux

on:
  push:
    branches:
    - master
  pull_request:
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        LCG: ["dev3/x86_64-el9-clang16-opt",
              "dev4/x86_64-el9-clang16-opt",
              "dev4/x86_64-el9-gcc13-opt",
              "LCG_106b/x86_64-el9-clang16-opt",
              "LCG_106b/x86_64-el9-gcc13-opt",
              "LCG_104/x86_64-el9-gcc13-opt"]
    steps:
    - uses: actions/checkout@v4
    - uses: cvmfs-contrib/github-action-cvmfs@v4
    - uses: aidasoft/run-lcg-view@v4
      with:
        release-platform: ${{ matrix.LCG }}
        run: |
          echo "::group::Run CMake"
          export JULIA_DEPOT_PATH="$(mktemp -d -p /tmp -t julia_depot_XXXXX):"
          mkdir build install
          cd build
          cmake -DENABLE_SIO=ON \
            -DENABLE_JULIA=ON \
            -DENABLE_RNTUPLE=$([[ ${{ matrix.LCG }} == LCG_104/* ]] && echo "OFF" || echo "ON") \
            -DENABLE_DATASOURCE=ON \
            -DCMAKE_INSTALL_PREFIX=../install \
            -DCMAKE_CXX_STANDARD=20 \
            -DCMAKE_CXX_FLAGS=" -fdiagnostics-color=always -Werror -Wno-error=deprecated-declarations " \
            -DUSE_EXTERNAL_CATCH2=OFF \
            -DPODIO_USE_CLANG_FORMAT=AUTO \
            -G Ninja ..
          echo "::endgroup::"
          echo "::group::Build"
          ninja -k0
          echo "::endgroup"
          echo "::group::Julia StaticArrays Package Install"
          julia -e 'import Pkg; Pkg.add("StaticArrays")'
          echo "::endgroup"
          echo "::group::Run tests"
          ctest --output-on-failure
          echo "::endgroup::"
          echo "::group::Install"
          ninja install
          echo "::endgroup::"
