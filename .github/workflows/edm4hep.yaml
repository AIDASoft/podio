name: edm4hep

on: [push, pull_request]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        LCG: ["LCG_102/x86_64-centos7-gcc11-opt",
              "LCG_102/x86_64-ubuntu2004-gcc9-opt"]
    steps:
      - uses: actions/checkout@v3
        with:
          path: podio
      - uses: actions/checkout@v3
        with:
          repository: key4hep/EDM4hep
          path: edm4hep
      - uses: actions/checkout@v3
        with:
          repository: catchorg/Catch2
          path: catch2
      - uses: cvmfs-contrib/github-action-cvmfs@v3
      - uses: aidasoft/run-lcg-view@v4
        with:
          release-platform: ${{ matrix.LCG }}
          run: |
            STARTDIR=$(pwd)
            echo "::group::Build Catch2"
            cd $STARTDIR/catch2
            mkdir build && cd build
            cmake -DCMAKE_CXX_STANDARD=17 -DCMAKE_INSTALL_PREFIX=../install -G Ninja ..
            ninja -k0 install
            export CMAKE_PREFIX_PATH=$STARTDIR/catch2/install:$CMAKE_PREFIX_PATH
            echo "::endgroup::"
            echo "::group::Build podio"
            cd $STARTDIR/podio
            mkdir build && cd build
            cmake -DENABLE_SIO=ON \
              -DCMAKE_INSTALL_PREFIX=../install \
              -DCMAKE_CXX_STANDARD=17 \
              -DCMAKE_CXX_FLAGS=" -fdiagnostics-color=always -Werror " \
              -DUSE_EXTERNAL_CATCH2=ON \
              -G Ninja ..
            ninja -k0
            echo "::endgroup::"
            echo "::group::Test and install podio"
            ctest --output-on-failure
            ninja install
            export ROOT_INCLUDE_PATH=$STARTDIR/podio/install/include:$ROOT_INCLUDE_PATH:$CPATH
            unset CPATH
            export CMAKE_PREFIX_PATH=$STARTDIR/podio/install:$CMAKE_PREFIX_PATH
            export LD_LIBRARY_PATH=$STARTDIR/podio/install/lib:$STARTDIR/podio/install/lib64:$LD_LIBRARY_PATH
            echo "::endgroup::"
            echo "::group::Build and test EDM4hep"
            cd $STARTDIR/edm4hep
            mkdir build && cd build
            cmake -DCMAKE_CXX_STANDARD=17 \
              -DCMAKE_CXX_FLAGS=" -fdiagnostics-color=always -Werror " \
              -DUSE_EXTERNAL_CATCH2=ON \
              -G Ninja ..
            ninja -k0
            ctest --output-on-failure
            echo "::endgroup::"
