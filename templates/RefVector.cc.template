std::vector<${relationtype}Handle>::const_iterator ${classname}Handle::${relation}_begin() const {
  auto ret_value = m_${relation}->begin();
  std::advance(ret_value, m_container->at(m_index).${relation}_begin);
  return ret_value;
}

std::vector<${relationtype}Handle>::const_iterator ${classname}Handle::${relation}_end() const {
  auto ret_value = m_${relation}->begin();
  std::advance(ret_value, m_container->at(m_index).${relation}_end-1);
  return ++ret_value;
}

void ${classname}Handle::add${relation}(${relationtype}Handle& component) {
  m_${relation}->push_back(component);
  m_container->at(m_index).${relation}_end++;
}
